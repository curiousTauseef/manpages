<?xml version="1.0" encoding="UTF-8"?>
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/xml; charset=utf-8"/>
		<title>Project Integration</title>
		<link rel="stylesheet" href="css/book.css" type="text/css"/>
	</head>
	<body>
		<h2>
			Project Integration
		</h2>
		<p>
			<span class="lang">mdoc</span> documents fit perfectly into a <a class="term" href="glossary.xml#unix">UNIX</a>
			development environment.  In general, this is defined by a group of source files that produce executables as compiled
			and linked by <a class="cmd term" href="glossary.xml#make">make</a>, called a build system.  Sources are usually
			version-controlled using <a class="cmd" href="commands.xml#cmd_cvs">cvs</a>, called revision control.
		</p>
		<p>
			In this section, I discuss methods for integrating <span class="cmd">mdoc</span> documents into a source-controlled
			build environment.  I'll focus on <a href="commands.xml#cmd_mandoc" class="cmd">mandoc</a> as a formatter, but
			provide stubs for using <a href="glossary.xml#troff" class="term cmd">troff</a>.
		</p>
		<p>
			Our examples will consider a project building a utility <span class="cmd">foo</span> from its single source file <span
				class="file">foo.c</span>.
		</p>
		<table class="nav">
			<tbody>
				<tr>
					<td class="nav-home"><a href="http://manpages.bsd.lv/index.html">Home</a></td>
					<td class="nav-next"><a href="part3-2-1.xml">Next</a></td>
					<td class="nav-history"><a href="http://manpages.bsd.lv/cgi-bin/cvsweb/part3-2.xml?cvsroot=manpages">History</a></td>
				</tr>
			</tbody>
		</table>
		<p class="edits">
			Last edited by $Author$ on $Date$.  Copyright &copy; 2011, Kristaps Dzonsons.  CC BY-SA.
		</p>
	</body>
</html>

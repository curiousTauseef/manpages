<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
	<head>
		<meta http-equiv="Content-Type" content="application/xhtml+xml; charset=utf-8"/>
		<title>Simple Function</title>
		<link rel="stylesheet" href="css/book.css" type="text/css"/>
	</head>
	<body>
		<h3>
			Simple Function
		</h3>
		<p>
			Let's study a simple C function, <span class="func">hi</span>, which prints <span class="screen">hello, world</span>
			just like in prior sections.  We begin with the familiar first macros.
		</p>
		<div class="mdocin">
			.Dd May 30, 2011
			<br />
			.Dt HI 3
			<br />
			.Os
			<br />
			.Sh NAME
			<br />
			.Nm hi
			<br />
			.Nd print \(dqhello, world\(dq
		</div>
		<p>
			All that's changed is the manual section, from 1 to 3.  We'll discuss manual sections later in this book.  Suffice to
			say that programming functions and libraries (not system calls!) are categorised in section 3.
		</p>
		<p>
			The calling syntax of our function is documented in the <span class="sec">SYNOPSIS</span> section.  Assume that our
			function prototype is within the header file <span class="file">hi.h</span> as <span class="screen">void
				hi(void)</span>, which, in non-programming terms, declares that a function <span class="screen">hi</span>
			accepts no arguments and does not return a value.
		</p>
		<div class="mdocin">
			.Sh SYNOPSIS
			<br />
			.In hi.h
			<br />
			.Ft void
			<br />
			.Fn hi
		</div>
		<p>
			This introduces three unfamiliar macros.  The <span class="macro">In</span> macro specifies an include file that
			interfacing programmes will need to include.  The <span class="macro">Ft</span> and <span class="macro">Fn</span> macros
			collectively document the function (return) type and function name.  Since not all languages have return types, the
			<span class="macro">Ft</span> macro is optional in this context.
		</p>
		<div class="mdocout">
			<div class="mdoc-section">
				<h1>SYNOPSIS</h1>
				<b class="mdoc-includes">#include &lt;<span class="mdoc-link-includes">hi.h</span>&gt;</b><p/>
				<i class="mdoc-ftype">void</i>
				<br/>
				<b class="mdoc-fname">hi</b>();
			</div>
		</div>
		<p>
			By now it comes as now surprise that <span class="macro">Ft</span> is scoped to the end of its line, as is <span
				class="macro">Fn</span> in this example.  In fact, both of these macros are syntatically similar to the <a
				href="macros.xhtml#macro_ar" class="macro">Ar</a> and <span class="macro">Ftl</span> found in the first chapter:
			their scopes are closed by subsequent macros on the same line.
		</p>
		<p>
			Since our function has no arguments or return values, all we need to do is add some bits in the <span
				class="sec">DESCRIPTION</span> section to complete this manual.
		</p>
		<div class="mdocin">
			.Dd May 30, 2011
			<br />
			.Dt HI 3
			<br />
			.Os
			<br />
			.Sh NAME
			<br />
			.Nm hi
			<br />
			.Nd print \(dqhello, world\(dq
			<br />
			.Sh SYNOPSIS 
			<br />
			.In hi.h
			<br />
			.Ft void 
			<br />
			.Fn hi
			<br />
			.Sh DESCRIPTION 
			<br />
			The
			<br />
			.Nm
			<br />
			function prints
			<br />
			.Qq hello, world 
			<br />
			and returns.
			<br />
			.Pp
			<br />
			It has no arguments.
		</div>
		<p>
			Let's also stipulate the function return value in its own section, <span class="sec">RETURN VALUES</span>.  This mirrors
			the <span class="sec">EXIT STATUS</span> section I introduced for <span class="file">hello.1</span>.  Although we don't
			have a return value, it's good practise to include this section anyway.  Again, the <span class="macro">Nm</span> macro,
			when invoked without arguments, reproduces its last arguments.
		</p>
		<div class="mdocin">
			.Sh RETURN VALUES
			<br />
			The
			<br />
			.Nm
			<br />
			function does not return a value.
		</div>
		<p>
			Although this example is instructive, it's quite simple.  Let's review our checklist before moving on.
		</p>
		<dl>
			<dt>Did I describe the preprocessing and linking information?</dt>
			<dd>Yes, a header file.  There is no linking information.</dd>
			<dt>Did I describe the calling syntax of each function and variable?</dt>
			<dd>Yes, the <span class="func">hi</span> function.</dd>
			<dt>Did I describe the type of each function and variable?</dt>
			<dd>Yes, as <span class="func">hi</span> has neither type nor value.</dd>
			<dt>Did I describe each argument in each calling syntax?</dt>
			<dd>This does not apply, as it has none.</dd>
			<dt>Did I describe each function's operation?</dt>
			<dd>Yes, in that it prints <span class="screen">hello, world</span>.</dd>
			<dt>Did I describe each function's side effects?</dt>
			<dd>This does not apply, as it has none.</dd>
		</dl>
		<p>
			Very few real-world functions are so simple.  In the next section, we introduce a more practical function with types and
			arguments.
		</p>
		<table class="nav">
			<tbody>
				<tr>
					<td class="nav-home"><a href="http://manpages.bsd.lv/index.html">Home</a></td>
					<td class="nav-next"><a href="part1-2-2.xhtml">Next</a></td>
					<td class="nav-history"><a href="http://manpages.bsd.lv/cgi-bin/cvsweb/part1-2-1.xml?cvsroot=manpages">History</a></td>
				</tr>
			</tbody>
		</table>
		<p class="edits">
			Last edited by $Author$ on $Date$.  Copyright &copy; 2011, Kristaps Dzonsons.  CC BY-SA.
		</p>
	</body>
</html>

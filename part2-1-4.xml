<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
	<head>
		<meta http-equiv="Content-Type" content="application/xhtml+xml; charset=utf-8"/>
		<title>Macros</title>
		<link rel="stylesheet" href="css/book.css" type="text/css"/>
	</head>
	<body>
		<h3>
			Macros
		</h3>
		<p>
			So far we've considered several different types of macros.  A macro is usually a terse, two or three-character sequence
			specified on a <a href="part2-1-1.xhtml#macro_line">macro line</a>.  In this section I formalise the various types of
			macros, categorised by their scope rules.
		</p>
		<p>
			In general, a macro is syntactically defined as having a macro name, and optionally flags and with optional flag
			arguments.  The arguments to a macro depend on its scope rules.
		</p>
		<div class="mdocsyntax">
			<span class="macro">Name</span> 
			<span class="macroopt">
				<span class="macroflag">Flag</span> 
				<span class="macroopt">
					<span class="macroarg">Arg</span>
				</span>
			</span>
		</div>
		<p>
			The hyphen <span class="screen">-</span> indicates a macro flag only when the preceding macro accepts arguments.
		</p>
		<h4>
			<a name="inline_macros" />
			In-line Macro
		</h4>
		<p>
			An in-line macro's arguments are scoped to the current line.  Its scope may also be closed out by subsequent macros: an
			in-line macro can never contain a nested macro.
		</p>
		<div class="mdocsyntax">
			<span class="macro">Name</span>
			<span class="macroopt">
				<span class="macroflag">Flag</span> 
				<span class="macroopt">
					<span class="macroarg">Flag Arg</span>
				</span>
			</span>
			<span class="macroopt">
				<span class="macroarg">Arg...</span>
			</span>
		</div>
		<p>
			Not all in-line macros accept arguments, and some in-line macros accept a fixed number of arguments.
		</p>
		<h4>
			<a name="partial_block_macros" />
			Partial Block Macros
		</h4>
		<p>
			A partial block macro is similar to an <a href="#inline_macros">in-line macro</a> in that its scope is restricted to the
			current line.  However, unlike an in-line macro, it accepts nested macros.
		</p>
		<div class="mdocsyntax">
			<span class="macro">Name</span>
			<span class="macroopt">
				<span class="macroflag">Flag</span> 
				<span class="macroopt">
					<span class="macroarg">Flag Arg</span>
				</span>
			</span>
			<span class="macroopt">
				<span class="macroarg">Arg|Macro...</span>
			</span>
		</div>
		<p>
			The scope of a partial block macro is always closed by the end of the line; any macros between it and the end of line
			are interpreted as nested macros.  Macros may be nested arbitrarily.
		</p>
		<p>
			Be warned.  If you open a <a href="#full_block_macros">full block macro</a> before the end of the line, behaviour is not
			always well-defined as the scope is broken.
		</p>
		<h4>
			<a name="full_block_macros" />
			Full Block Macros
		</h4>
		<p>
			The simplest multi-line macro is a full block macro, which is opened and closed by two separate macros.  The pair of
			macros involved in a full block macro are called the beginning and ending macros.
		</p>
		<div class="mdocsyntax">
			.<span class="macro">Begin</span>
			<span class="macroopt">
				<span class="macroflag">Flag</span> 
				<span class="macroopt">
					<span class="macroarg">Flag Arg</span>
				</span>
			</span>
			<span class="macroopt">
				<span class="macroarg">Arg...</span>
			</span>
			<br />
			<span class="macroopt">
				<span class="macroarg">Arg...</span>
			</span>
			<br />
			.<span class="macro">End</span>
		</div>
		<p>
			One must be careful, in full block macros, not to break the scope of other full or <a
				href="#partial_block_macros">partial block</a> macros, or behaviour is undefined.
		</p>
		<p>
			A variant of the full block macro is one where the ending macro may be one of several macros.  This is at times referred
			to as implicit scope closure.  There is no syntactic difference between this and the full block macro but that the <span
				class="macro">End</span> macro is arbitrary.
		</p>
		<table class="nav">
			<tbody>
				<tr>
					<td class="nav-home"><a href="index.html">Home</a></td>
					<td class="nav-next"><a href="part2-1-5.xhtml">Next</a></td>
					<td class="nav-history"><a href="/cgi-bin/cvsweb/part2-1-4.xml?cvsroot=manpages">History</a></td>
				</tr>
			</tbody>
		</table>
		<p class="edits">
			Last edited by $Author$ on $Date$.  Copyright &copy; 2011, Kristaps Dzonsons.  CC BY-SA.
		</p>
	</body>
</html>


<?xml version="1.0" encoding="UTF-8"?>
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/xml; charset=utf-8"/>
		<title>Required Sections</title>
		<link rel="stylesheet" href="css/book.css" type="text/css"/>
	</head>
	<body>
		<h3>
			Required Sections
		</h3>
		<p>
			As discussed previously, a section is begun by the <a href="macros.xml#macro_sh" class="macro">Sh</a> macro and
			continues until the end of file or another section.
		</p>
		<div class="mdocsyntax">
			.<a href="macros.xml#macro_sh" class="macro">Sh</a> <span class="macroarg">SECTION NAME</span>
			<br />
			Text and macros within the section.
		</div>
		<p>
			What follows is a description of each required section: if your manual does not have the documented section, it should
			not be considered as well-formed.  Do note, however, that some types of manuals lack the <span
				class="sec">SYNOPSIS</span> section.
		</p>
		<h4>
			NAME
		</h4>
		<p>
			The <span class="sec">NAME</span> section immediately follows the document prologue and is thus usually the first macro
			of the document body.  It specifies the name of each documented component, and provides a brief description of the
			components as a whole.
		</p>
		<p>
			The following is an example of the <span class="sec">NAME</span> section for a single utility, <span class="cmd">hi</span>.
		</p>
		<div class="mdocin">
			.Sh NAME
			<br />
			.Nm foo
			<br />
			.Nd print a simple greeting
		</div>
		<p>
			The <a href="macros.xml#macro_nd" class="macro">Nd</a> macro should consist of a single line without trailing
			punctuation or leading capitalisation.  As a rule of thumb, this description should be a sentence clause in the
			imperative mood for commands and functions, or simply a noun phrase for file formats, devices, and miscellanea.
		</p>
		<p>
			Example imperative:
		</p>
		<div class="mdocin">
			.Nm foo
			<br />
			.Nd print a simple greeting
		</div>
		<p>
			Example noun phrase:
		</p>
		<div class="mdocin">
			.Nm mdoc
			<br />
			.Nd mdoc language reference
		</div>
		<p>
			In the event of multiple named components, such as a function library or aliased commands, comma-separate each command
			but for the last.  It's common to alphabetically order this listing.
		</p>
		<div class="mdocin">
			.Nm hello ,
			<br />
			.Nm hi
			<br />
			.Nd print greetings
		</div>
		<p>
			Note that the punctuation should be separate from the macro argument.  This allows the formatter to distinguish between
			the name and trailing punctuation.
		</p>
		<h4>
			SYNOPSIS
		</h4>
		<p>
			The <span class="sec">SYNOPSIS</span> section, if specified, follows the <span class="sec">NAME</span> section.  It
			specifies the calling syntax of a component, thus, it is necessary for functions and commands.  The <span
				class="sec">SYNOPSIS</span> section has a layout dictated by convention, and depends upon the category.
		</p>
		<h5>
			Commands
		</h5>
		<p>
			For command manuals in category <span class="cat">1</span>, <span class="cat">6</span>, and <span class="cat">9</span>,
			each command must have its full syntax stipulated.
		</p>
		<div class="mdocin">
			.Nm hello
			<br />
			.Op Fl a
			<br />
			.Op Fl o Ar output
			<br />
			.Op Ar prefix
		</div>
		<p>
			This defines three optional arguments for the <span class="cmd">hi</span> command: a flag, a flag with an argument, and
			an argument.  Flags should be purely alphabetical, without regard to whether a flag takes an argument.  Arguments should
			also be alphabetised.
		</p>
		<p>
			Note that if your manual only documents one component, it's unnecessary to re-write the command name for <a
				href="macros.xml#macro_nm" class="macro">Nm</a>.  If omitted, the last specified <a
				href="macros.xml#macro_nm" class="macro">Nm</a> in the <span class="sec">NAME</span> will be used.
		</p>
		<p>
			Multiple commands are specified in the order they appear within the <span class="sec">NAME</span> section.
		</p>
		<div class="mdocin">
			.Nm hello
			<br />
			.Op Fl a
			<br />
			.Op Fl o Ar output
			<br />
			.Op Ar prefix
			<br />
			.Nm hi
		</div>
		<p>
			Since there are multiple <a href="macros.xml#macro_nm" class="macro">Nm</a> macros in the <span
				class="sec">NAME</span> section, it's necessary that we specify the name of each command.  In this example, an
			additional command <span class="cmd">hi</span> is specified, which has neither flags nor arguments.
		</p>
		<h5>
			Functions
		</h5>
		<p>
			Function libraries are more complicated, as they involve more diverse content.  A function library <span
				class="sec">SYNOPSIS</span> section consists of all documented material, including header files, functions,
			variables, macros, and so on.
		</p>
		<p>
			A minimum function manual consists of a single function call and the header file of its prototype (if in a language
			requiring header files, such as C):
		</p>
		<div class="mdocin">
			.In greeting.h
			<br />
			.Ft int
			<br />
			.Fo hello
			<br />
			.Fa "int C"
			<br />
			.Fa "const char *output"
			<br />
			.Fc
		</div>
		<p>
			The header file comes before those functions it describes.  If one or more header files are required, list them in the
			order of inclusion in source files.
		</p>
		<div class="mdocin">
			.In sys/types.h
			<br />
			.In greeting.h
			<br />
			.Ft int
			<br />
			.Fo hello
			<br />
			.Fa "u_int C"
			<br />
			.Fa "const char *output"
			<br />
			.Fc
		</div>
		<p>
			If multiple functions are documented, list them in the order they appear in the <span class="sec">NAME</span> section.
		</p>
		<div class="mdocin">
			.In sys/types.h
			<br />
			.In greeting.h
			<br />
			.Ft int
			<br />
			.Fo hello
			<br />
			.Fa "u_int C"
			<br />
			.Fa "const char *output"
			<br />
			.Fc
			<br />
			.Ft void
			<br />
			.Fn hi
		</div>
		<p>
			List any global variables with the <a href="macros.xml#macro_vt" class="macro">Vt</a> and/or <a
				href="macros.xml#macro_va" class="macro">Va</a> macro following function prototypes.
		</p>
		<div class="mdocin">
			.In sys/types.h
			<br />
			.In greeting.h
			<br />
			.Ft int
			<br />
			.Fo hello
			<br />
			.Fa "u_int C"
			<br />
			.Fa "const char *output"
			<br />
			.Fc
			<br />
			.Ft void
			<br />
			.Fn hi
			<br />
			.Vt extern const char * const * greetings;
		</div>
		<p>
			Macro definitions, however, should come before the function prototypes.  These use the <a href="macros.xml#macro_fd"
				class="macro">Fd</a> macro and must include the preprocessor directive for the macro.
		</p>
		<div class="mdocin">
			.In sys/types.h
			<br />
			.In greeting.h
			<br />
			.Fd #define GREETING
			<br />
			.Ft int
			<br />
			.Fo hello
			<br />
			.Fa "u_int C"
			<br />
			.Fa "const char *output"
			<br />
			.Fc
			<br />
			.Ft void
			<br />
			.Fn hi
			<br />
			.Vt extern const char * const * greetings;
		</div>
		<p>
			Some manuals define a range of functions with differing header dependencies.  In general it's not a good idea to group
			these within the same manual. However, if necessary, arrange the functions and variables underneath their header file
			<a href="macros.xml#macro_in" class="macro">In</a> macros.  These need not necessarily much with the <span
				class="sec">NAME</span> section ordering, but should be as close as possible.
		</p>
		<h4>
			DESCRIPTION
		</h4>
		<p>
			This section documents the component itself, and is usually the longest.  For commands, each command is described in
			detail along with its arguments.  For functions, each function must be described along with its types and arguments.
		</p>
		<h5>
			Commands
		</h5>
		<p>
			A command or set of commands is documented in <span class="sec">DESCRIPTION</span> with a brief explanation of
			behaviour, a list of arguments, and default behaviour regarding those arguments.
		</p>
		<div class="mdocin">
			The
			<br />
			.Nm
			<br />
			command prints out a simple greeting.
			<br />
			The arguments are as follows:
			<br />
			.Bl -tag -width Ds
			<br />
			.It Fl C
			<br />
			Whether to uppercase the output.
			<br />
			.It Fl o Ar output
			<br />
			A file into which output should be written.
			<br />
			.It Ar prefix
			<br />
			A string prefixed to the output.
			<br />
			.El
			<br />
			.Pp
			<br />
			By default,
			<br />
			.Nm
			<br />
			prints a mixed-case greeting to standard output.
		</div>
		<p>
			If multiple commands are included, they should be listed in the order they appear in <span class="sec">NAME</span> and
			<span class="sec">DESCRIPTION</span>.  Remember to specify a documented command, in this case, whenever invoking the <a
				href="macros.xml#macro_nm" class="macro">Nm</a> macro.  Command exit statuses are documented in <span
				class="sec">EXIT STATUS</span>.
		</p>
		<h5>
			Functions
		</h5>
		<p>
			Functions do not share the <span class="screen">The arguments are as follows</span> convention that commands enjoy.
			Most often, a function is described in paragraph form.
		</p>
		<div class="mdocin">
			The
			<br />
			.Fn hello
			<br />
			function prints a greeting to standard out.
			<br />
			If
			<br />
			.Fa C
			<br />
			is non-zero, output is upper-cased.
			<br />
			If
			<br />
			.Fa prefix
			<br />
			is non-NULL, it is prefixed to the output.
		</div>
		<p>
			A function with many variables, or complicated variables, may wish to choose the same listed-argument notation of
			commands.
		</p>
		<div class="mdocin">
			The
			<br />
			.Fn hello
			<br />
			function prints a greeting to standard out.
			<br />
			The arguments are as follows:
			<br />
			.Bl -tag -width Ds
			<br />
			.It Fa "C"
			<br />
			If non-zero, output is upper-cased.
			<br />
			.It Fa "prefix"
			<br />
			If non-NULL,
			<br />
			.Fa prefix
			<br />
			is prefixed to the output.
			<br />
			.El
		</div>
		<p>
			Above all, you must be careful to document each argument to each function.  Function return values are usually
			documented in <span class="sec">RETURN VALUES</span>.
		</p>
		<table class="nav">
			<tbody>
				<tr>
					<td class="nav-contents"><a href="toc.xml">Contents</a></td>
					<td class="nav-next"><a href="part2-3-2.xml">Next</a></td>
					<td class="nav-home"><a href="http://manpages.bsd.lv/index.html">Home</a></td>
					<td class="nav-history"><a href="http://manpages.bsd.lv/cgi-bin/cvsweb/part2-3-1.xml?cvsroot=manpages">History</a></td>
				</tr>
			</tbody>
		</table>
		<p class="edits">
			Last edited by $Author$ on $Date$.  Copyright &copy; 2011, Kristaps Dzonsons.  CC BY-SA.
		</p>
	</body>
</html>

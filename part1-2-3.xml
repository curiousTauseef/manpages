<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
	<head>
		<meta http-equiv="Content-Type" content="application/xhtml+xml; charset=utf-8"/>
		<title>Case Study</title>
		<link rel="stylesheet" href="css/book.css" type="text/css"/>
	</head>
	<body>
		<h3>
			Case Study
		</h3>
		<p>
			I now introduce a case study of a real-world function manual, in particular the manual for the <span
				class="func">strtonum</span> function, which is an extension to the <a class="term" href="glossary.xhtml#libc">C
				Standard Library</a> found in <a class="term" href="glossary.xhtml#openbsd">OpenBSD</a>.  The original file may
			be viewed on-line at <a class="external"
				href="http://www.openbsd.org/cgi-bin/cvsweb/src/lib/libc/stdlib/strtonum.3">src/lib/libc/stdlib/strtonum.3</a>,
			file version 1.14.
		</p>
		<div class="mdocin">
			.\"&nbsp;&nbsp;&nbsp;&nbsp;$&#8203;OpenBSD: strtonum.3,v 1.14 2007/05/31 19:19:31 jmc Exp $
			<br />
			.\"
			<br />
			.\" Copyright (c) 2004 Ted Unangst
			<br />
			.\"
			<br />
			.\" Permission to use, copy, modify, and distribute this software for any
			<br />
			.\" purpose with or without fee is hereby granted, provided that the above
			<br />
			.\" copyright notice and this permission notice appear in all copies.
			<br />
			.\"
			<br />
			.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
			<br />
			.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
			<br />
			.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
			<br />
			.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
			<br />
			.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
			<br />
			.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
			<br />
			.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
		</div>
		<p>
			This is the standard comment header to manual files in OpenBSD.  Indeed, most distributed manuals begin with a copyright
			notice, then a license.  The <span class="screen">$&#8203;OpenBSD$</span> line is automatically updated by the revision
			control system, <span class="cmd">cvs</span>, whenever an update to the file is committed.  The line following is the
			copyright message, and following that is the text form of the <a class="term" href="glossary.xhtml#isc_license">ISC
				license</a>.
		</p>
		<div class="mdocin">
			.Dd $&#8203;Mdocdate: May 31 2007 $
			<br />
			.Dt STRTONUM 3
			<br />
			.Os
		</div>
		<p>
			These three standard macros establish the last modified date, manual title (same as the single documented function but
			capitalised), manual category <span class="cat">3</span> (functions), and the default operating system.  The <span
				class="screen">$&#8203;Mdocdate$</span> line, like the <span class="screen">$&#8203;OpenBSD$</span> line, is
			automatically updated by <span class="cmd">cvs</span> whenever the document is committed to the source repository.
		</p>
		<div class="mdocin">
			.Sh NAME
			<br />
			.Nm strtonum
			<br />
			.Nd "reliably convert string value to an integer"
		</div>
		<p>
			Declares a single documented function, <span class="func">strtonum</span>, and its purpose.  The quotations within the
			<a href="macros.xhtml#macro_nd" class="macro">Nd</a> macro are superfluous: like <a href="macros.xhtml#macro_qq"
				class="macro">Qq</a> macro studied earlier, <a href="macros.xhtml#macro_nd" class="macro">Nd</a> accepts an
			arbitrary number of arguments to format.  Quotation, in grouping these as one argument, serves little but to pass in
			whitespace (there is no special whitespace to pass in).
		</p>
		<div class="mdocin">
			.Sh SYNOPSIS
			<br />
			.Fd #include &lt;stdlib.h&gt;
			<br />
			.Ft long long
			<br />
			.Fo strtonum
			<br />
			.Fa "const char *nptr"
			<br />
			.Fa "long long minval"
			<br />
			.Fa "long long maxval"
			<br />
			.Fa "const char **errstr"
			<br />
			.Fc
		</div>
		<p>
			This declares the function prototype and calling syntax.  The <span class="header">stdlib.h</span> must be included.
			Note that each function argument includes its name (e.g., <span class="screen">nptr</span> and <span
				class="screen">minval</span>).  While not common in header file prototypes, this allows later references of
			function invocation in the manual to refer back to the prototype for type and context information.
		</p>
		<p>
			Note that function arguments are quoted.  This allows each argument to be considered in entirety: type, qualifiers,
			pointers, and so on.  Unlike for <a href="macros.xhtml#macro_nd" class="macro">Nd</a>, this is necessary.
		</p>
		<p>
			Note also that while <a href="macros.xhtml#macro_fn" class="macro">Fn</a> could have been used, it would have created a
			long input line.  The broken-down form was used for clarity.
		</p>
		<div class="mdocin">
			.Sh DESCRIPTION
			<br />
			The
			<br />
			.Fn strtonum
			<br />
			function converts the string in
			<br />
			.Fa nptr
			<br />
			to a
			<br />
			.Li long long
			<br />
			value.
		</div>
		<p>
			Note the reference to a function argument with <a href="macros.xhtml#macro_fa" class="macro">Fa</a> by its name, <span
				class="screen">nptr</span>.  Also note that the <a href="macros.xhtml#macro_li" class="macro">Li</a> usage is
			not good practise: since the <span class="screen">long long</span> refers to a type, it should be of type <a
				href="macros.xhtml#macro_vt" class="macro">Vt</a>.
		</p>
		<div class="mdocin">
			The
			<br />
			.Fn strtonum
			<br />
			function was designed to facilitate safe, robust programming
			<br />
			and overcome the shortcomings of the
			<br />
			.Xr atoi 3
			<br />
			and
			<br />
			.Xr strtol 3
			<br />
			family of interfaces.
			<br />
			.Pp
			<br />
			The string may begin with an arbitrary amount of whitespace
			<br />
			(as determined by
			<br />
			.Xr isspace 3 )
			<br />
			followed by a single optional
			<br />
			.Ql +
			<br />
			or
			<br />
			.Ql -
			<br />
			sign.
			<br />
			.Pp
			<br />
			The remainder of the string is converted to a
			<br />
			.Li long long
			<br />
			value according to base 10.
			<br />
			.Pp
			<br />
			The value obtained is then checked against the provided
			<br />
			.Fa minval
			<br />
			and
			<br />
			.Fa maxval
			<br />
			bounds.
			<br />
			If
			<br />
			.Fa errstr
			<br />
			is non-null,
			<br />
			.Fn strtonum
			<br />
			stores an error string in
			<br />
			.Fa *errstr
			<br />
			indicating the failure.
		</div>
		<p>
			The remainder of the <span class="sec">DESCRIPTION</span> section has completely captured the calling syntax and
			behaviour of the function.  The usage of <a href="macros.xhtml#macro_ql" class="macro">Ql</a> macro is simply to set
			aside non-alphanumeric letters from the regular stream of text.
		</p>
		<div class="mdocin">
			.Sh RETURN VALUES
			<br />
			The
			<br />
			.Fn strtonum
			<br />
			function returns the result of the conversion,
			<br />
			unless the value would exceed the provided bounds or is invalid.
			<br />
			On error, 0 is returned,
			<br />
			.Va errno
			<br />
			is set, and
			<br />
			.Fa errstr
			<br />
			will point to an error message.
			<br />
			.Fa *errstr
			<br />
			will be set to
			<br />
			.Dv NULL
			<br />
			on success;
			<br />
			this fact can be used to differentiate
			<br />
			a successful return of 0 from an error.
		</div>
		<p>
			Since this function returns a rather tricky error message, it's necessary to describe the effects of both the return
			value and the passed-in arguments.
		</p>
		<div class="mdocin">
			.Sh EXAMPLES
			<br />
			Using
			<br />
			.Fn strtonum
			<br />
			correctly is meant to be simpler than the alternative functions.
			<br />
			.Bd -literal -offset indent
			<br />
			int iterations;
			<br />
			const char *errstr;
			<br />
			<br />
			iterations = strtonum(optarg, 1, 64, &amp;errstr);
			<br />
			if (errstr)
			<br />
			&nbsp;&nbsp;&nbsp;&nbsp;errx(1, "number of iterations is %s: %s", errstr, optarg);
			<br />
			.Ed
			<br />
			.Pp
			<br />
			The above example will guarantee that the value of iterations is between
			<br />
			1 and 64 (inclusive).
		</div>
		<p>
			Many manual readers jump directly to the <span class="sec">EXAMPLES</span> section to gain an understanding of your
			function.  Thus, not only must the example compile and run, it must also demonstrate as many parts of the function as
			possible.  In the case of <span class="func">strtonum</span>, an error condition and a non-error condition are
			documented.  However, the header file inclusion(s) are missing, which may mislead readers.  In particular, the
			non-standard <span class="func">errx</span> function requires the <span class="header">err.h</span> header file.
		</p>
		<div class="mdocin">
			.Sh ERRORS
			<br />
			.Bl -tag -width Er
			<br />
			.It Bq Er ERANGE
			<br />
			The given string was out of range.
			<br />
			.It Bq Er EINVAL
			<br />
			The given string did not consist solely of digit characters.
			<br />
			.It Bq Er EINVAL
			<br />
			.Ar minval
			<br />
			was larger than
			<br />
			.Ar maxval .
			<br />
			.El
			<br />
			.Pp
			<br />
			If an error occurs,
			<br />
			.Fa errstr
			<br />
			will be set to one of the following strings:
			<br />
			.Pp
			<br />
			.Bl -tag -width "too largeXX" -compact
			<br />
			.It too large
			<br />
			The result was larger than the provided maximum value.
			<br />
			.It too small
			<br />
			The result was smaller than the provided minimum value.
			<br />
			.It invalid
			<br />
			The string did not consist solely of digit characters.
			<br />
			.El
		</div>
		<p>
			The <span class="sec">ERRORS</span> section will be rigorously covered in the section on <a
				href="part1-4.xhtml#sec_system_call">System Calls</a>.  In brief, since the <span class="var">errno</span> global error
			variable is set, each possible value must be documented in a list using the <a href="macros.xhtml#macro_er"
				class="macro">Er</a> macro.  These are always enclosed within <a href="macros.xhtml#macro_bq" class="macro">Bq</a>.
		</p>
		<p>
			Furthermore, the error string in <span class="var">errstr</span> must also be documented.
		</p>
		<div class="mdocin">
			.Sh SEE ALSO
			<br />
			.Xr atof 3 ,
			<br />
			.Xr atoi 3 ,
			<br />
			.Xr atol 3 ,
			<br />
			.Xr atoll 3 ,
			<br />
			.Xr sscanf 3 ,
			<br />
			.Xr strtod 3 ,
			<br />
			.Xr strtol 3 ,
			<br />
			.Xr strtoul 3
		</div>
		<p>
			This section collects all references to other manuals made elsewhere in this manual, then adds more for completion.
			Note that the entries are alphabetically sorted.
		</p>
		<div class="mdocin">
			.Sh STANDARDS
			<br />
			.Fn strtonum
			<br />
			is an
			<br />
			.Ox
			<br />
			extension.
			<br />
			The existing alternatives, such as
			<br />
			.Xr atoi 3
			<br />
			and
			<br />
			.Xr strtol 3 ,
			<br />
			are either impossible or difficult to use safely.
			<br />
			.Sh HISTORY
			<br />
			The
			<br />
			.Fn strtonum
			<br />
			function first appeared in
			<br />
			.Ox 3.6 .
		</div>
		<p>
			Since this function is included in OpenBSD's <a href="glossary.xhtml#libc" class="term">C Standard Library</a>, the fact that the
			function is not standard must absolutely be documented.  In this, the <a href="macros.xhtml#macro_ox"
				class="macro">Ox</a> macro indicates the OpenBSD operating system (each BSD UNIX free operating system has its
			own macro).
		</p>
		<table class="nav">
			<tbody>
				<tr>
					<td class="nav-home"><a href="http://manpages.bsd.lv/index.html">Home</a></td>
					<td class="nav-next"><a href="part1-3.xhtml">Next</a></td>
					<td class="nav-history"><a href="http://manpages.bsd.lv/cgi-bin/cvsweb/part1-2-3.xml?cvsroot=manpages">History</a></td>
				</tr>
			</tbody>
		</table>
		<p class="edits">
			Last edited by $Author$ on $Date$.  Copyright &copy; 2011, Kristaps Dzonsons.  CC BY-SA.
		</p>
	</body>
</html>
